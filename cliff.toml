# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[changelog]
# changelog header
header="""
# Changelog\n
---

All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body="""
{% if version %}\
    ## **{{ version }} ({{ timestamp | date(format="%Y-%m-%d") }})**\n
{% else %}\
    ## **Unreleased**\n
{% endif %}\
---
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits | filter(attribute="merge_commit", value=false) %}
            * {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# template for the changelog footer
footer="""
<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespace from the templates
trim=true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits=true
# filter out the commits that are not conventional
filter_unconventional=true
# process each line of a commit as an individual commit
split_commits=false
# regex for parsing and grouping commits
commit_parsers=[
    {message="^feat", group="<!-- 0 -->:rocket: New features"},
    {message="^fix", group="<!-- 1 -->:bug: Bug fixes"},
    {message="^bugfix", group="<!-- 1 -->:bug: Bug fixes"},
    {message="^docs?", group="<!-- 2 -->:page_with_curl: Documentation"},
    {message="^perf", group="<!-- 3 -->:zap: Performance"},
    {message="^refactor", group="<!-- 4 -->:building_construction: Refactor"},
    {message="^style", group="<!-- 5 -->:black_nib: Styling"},
    {message="^test", group="<!-- 6 -->:test_tube: Testing"},
    {message="^chore", group="<!-- 7 -->:broom: Miscellaneous tasks"},
    {message="^build", group="<!-- 7 -->:broom: Miscellaneous tasks"},
    {message="^ci", group="<!-- 7 -->:broom: Miscellaneous tasks"},
    {message="^security", group="<!-- 8 -->:shield: Security"},
    {message="^", skip=true},
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits=true
# filter out the commits that are not matched by commit parsers
filter_commits=false
# regex for matching git tags
tag_pattern="[0-9].*"
# regex for skipping tags
skip_tags="^v"
# regex for ignoring tags
ignore_tags=""
# sort the tags topologically
topo_order=false
# sort the commits inside sections by oldest/newest order
sort_commits="oldest"
