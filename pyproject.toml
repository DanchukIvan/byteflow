[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$minor.$major.$patch$prerelease"
version_scheme = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
changelog_merge_prerelease = true
changelog_file = 'CHANGELOG.rst'
encoding = 'utf-8'

[tool.commitizen.customize]
# FIXME: cz очень сырой - он не распознает кастомные настройки парсинга, в связи с чем его можно использовать
# только для бампинга версий и формирования changelog (и то это под вопросом). Соответственно хук нужно сносить.
schema_pattern = '(?s)(build|ci|docs|feat|fix|perf|refactor|ref|removal|remove_feat|hotfix|style|test|chore|revert|bump)(\(\S+\))?!?:( [^\n\r]+)([\n\n.]*|[ ]*)([\S\s]+)'
bump_map = {"break" = "MAJOR", "removal" = "MAJOR", "feat" = "MINOR", "build" = "MINOR", "perf" = 'PATCH', "fix" = "PATCH", "docs" = "PATCH", "hotfix" = "PATCH"}
change_type_map = {"removal" = "Deprecated API", "remove_feat" = "Deprecated features", "feat" = "New features", "build" = "Updated external dependencies", "ref" = "Refactored", "perf" = "Performance improvements", "fix" = "Bugfixes and patches", docs = "Documentation changes", "hotfix" = "Hotfixes", "style" = "Code style improvements"}

[tool.poetry]
name = "yass"
version = "v0.0.1"
description = "Универсальный скрапер, который легко запустить"
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
asyncio = "*"
playwright = "*"
# uvloop = "*"
pandas = {version = ">=2.0", extras = ['pyarrow']}
polars = {version = "^0.19.0", extras = ["pyarrow"]}
httpx = "^0.24.1"
attrs = "^23.1.0"
aioboto3 = {version = "^11.3.0", extras = ["boto3"]}
pre-commit = "^3.4.0"
more-itertools = "*"
orjson = "^3.9.7"
regex = "^2023.8.8"
fake-useragent = "^1.2.1"
pydeps = "^1.12.17"
morefs = {extras = ["asynclocal"], version = "^0.1.2"}
fsspec = "^2023.10.0"
sqlalchemy = "^2.0.23"
aioitertools = "^0.11.0"
duckdb = "^0.9.2"
duckdb-engine = "^0.9.2"
s3fs = "^2023.12.0"

[tool.poetry.group.dev]

[tool.poetry.group.dev.dependencies]
dynaconf = "*"
commitizen = "^3.10.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-click = "^5.1.0"
sphinx-autodoc-typehints = "^1.25.2"
sphinx-tabs = "^3.4.4"
sphinx-last-updated-by-git = "^0.3.6"
sphinx-sitemap = "^2.5.1"
sphinx-paramlinks = "^0.6.0"
sphinx-lfs-content = "^1.1.4"
seed-intersphinx-mapping = "^1.2.2"
sphinx-copybutton = "^0.5.2"
sphinx-design = "^0.5.0"
sphinx-notfound-page = "^1.0.0"
esbonio = "^0.16.3"
sphinxawesome-theme = {version = "^5.0.0b6", allow-prereleases = true}
myst-parser = "^2.0.0"
sphinxcontrib-autodoc-inherit-overload = "^2023.4"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest-playwright = "*"
pytest = "*"
pytest-mock = "*"
